= simple_form_for(@invoice,
              html: { class: 'form-horizontal' },
              wrapper: :horizontal_form,
              wrapper_mappings: {  check_boxes: :horizontal_radio_and_checkboxes,
                radio_buttons: :horizontal_radio_and_checkboxes,
                file: :horizontal_file_input,
                boolean: :horizontal_boolean} ) do |f|
  = f.association :user, collection: User.all, label_method: :first_name, value_method: :id, label: I18n.t('invoices.new.user'), multiple: false, prompt: I18n.t('invoices.new.select.user')
  = f.input :date_of_an_invoice, as: :date, start_year: Date.today.year, order: [:day, :month, :year], wrapper: :horizontal_form, required: true

  fieldset.custom-fieldset
    legend.custom-legend = I18n.t('invoices.new.select_payment_term_or_deadline')
    - unless @invoice.errors[:base].empty?
      .has-error
        = f.input :payment_term, collection: 1..31, prompt: 'Select days', include_blank: '-', label: 'Payment term \n (in days)', wrapper: :horizontal_form
        = f.input :deadline, as: :date, start_year: Date.today.year,  order: [:day, :month, :year], wrapper: :horizontal_form, prompt: '-'
        .col-sm-3
        .col-sm-9
          span.help-block = @invoice.errors[:base][0]
    - else
      = f.input :payment_term, collection: 1..31, prompt: I18n.t('invoices.new.select_days'),  include_blank: '-', label: 'Payment term (in days)', wrapper: :horizontal_form
      = f.input :deadline, as: :date_picker, wrapper: :horizontal_form

  fieldset.custom-fieldset
    legend.custom-legend = I18n.t('invoices.new.select_sale_or_project')
    - unless @invoice.errors[:base].empty?
      .has-error
        = f.association :sale, collection: Sale.all, label_method: lambda { |sale| "#{sale.date}" " to " "#{sale.customer.name}" }, value_method: :id, prompt: I18n.t('sales.new.select_sale'), multiple: false, multiple: false, required: true
        .m-t-l
        h5.horizontal-line-with-text
          span OR
        .m-b-s
        = f.association :project, collection: Project.all, label_method: :name, value_method: :id, prompt: I18n.t('projects.new.select_project'), multiple: false, multiple: false, required: true
        .col-sm-3
        .col-sm-9
          span.help-block = @invoice.errors[:base][0]
    - else
      = f.association :sale, collection: Sale.all, label_method: lambda { |sale| "#{sale.date}" " to " "#{sale.customer.name}" }, value_method: :id, prompt: I18n.t('sales.new.select_sale'), multiple: false, multiple: false, required: true
      .m-t-l
      h5.horizontal-line-with-text
        span OR
      .m-b-s
      = f.association :project, collection: Project.all, label_method: :name, value_method: :id, prompt: I18n.t('projects.new.select_project'), multiple: false, multiple: false, required: true

  = f.input :interest_in_arrears, label: 'Interest in arrears (in %)', input_html: { min: 0, max: 100 }
  = f.input :reference_number
  = f.input :status, collection: [['PENDING', 'PENDING'], ['PAID', 'PAID'], ['OVERDUE', 'OVERDUE']], prompt: I18n.t('invoices.new.select_status')
  = f.input :description

  .btn-toolbar.text-center
    = link_to I18n.t('button.cancel'), invoices_path, class: 'btn btn-primary btn-outline'
    = f.button :submit, class: 'btn-primary'
